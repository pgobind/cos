import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;
import software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider;
import software.amazon.awssdk.core.sync.RequestBody;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.PutObjectRequest;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;

public class PostgresDumpUploader {

    private static final String DB_NAME = "your_db_name";
    private static final String DB_USER = "your_username";
    private static final String DB_HOST = "your_db_host";
    private static final String DB_PORT = "5432";
    private static final String DUMP_FILE = "/tmp/db_backup.sql"; // temp file
    private static final String S3_BUCKET = "your-s3-bucket";
    private static final String S3_KEY = "backups/db_backup.sql";

    public static void main(String[] args) throws Exception {
        HikariConfig config = new HikariConfig();
        config.setJdbcUrl("jdbc:postgresql://" + DB_HOST + ":" + DB_PORT + "/" + DB_NAME);
        config.setUsername(DB_USER);
        config.setPassword("your_password"); // or use env vars/secrets manager
        try (HikariDataSource ds = new HikariDataSource(config)) {
            System.out.println("Testing DB connection...");
            ds.getConnection().close();
        }

        dumpDatabase();
        uploadToS3();
    }

    private static void dumpDatabase() throws IOException, InterruptedException {
        System.out.println("Starting pg_dump...");
        ProcessBuilder builder = new ProcessBuilder(
                "pg_dump",
                "-h", DB_HOST,
                "-p", DB_PORT,
                "-U", DB_USER,
                "-F", "c", // custom format
                "-f", DUMP_FILE,
                DB_NAME
        );

        // Set environment variable for password (use with care)
        builder.environment().put("PGPASSWORD", "your_password");
        builder.inheritIO();

        Process process = builder.start();
        int exitCode = process.waitFor();
        if (exitCode != 0) {
            throw new RuntimeException("pg_dump failed with exit code " + exitCode);
        }

        System.out.println("pg_dump completed successfully.");
    }

    private static void uploadToS3() {
        System.out.println("Uploading to S3...");
        S3Client s3 = S3Client.builder()
                .region(Region.US_EAST_1) // change region
                .credentialsProvider(DefaultCredentialsProvider.create())
                .build();

        PutObjectRequest request = PutObjectRequest.builder()
                .bucket(S3_BUCKET)
                .key(S3_KEY)
                .build();

        File dumpFile = new File(DUMP_FILE);
        s3.putObject(request, RequestBody.fromFile(dumpFile));
        System.out.println("Upload complete: s3://" + S3_BUCKET + "/" + S3_KEY);
    }
}
