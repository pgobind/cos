public class SimpleEncryption {
    public static void main(String[] args) {
        String originalText = "Hello, World! o694841";
        int shift = 3;

        // Encrypt the original string
        String encryptedText = encrypt(originalText, shift);
        System.out.println("Encrypted text: " + encryptedText);

        // Decrypt the encrypted string
        String decryptedText = decrypt(encryptedText, shift);
        System.out.println("Decrypted text: " + decryptedText);
    }

    // Encrypt using custom cipher
    public static String encrypt(String text, int shift) {
        StringBuilder encrypted = new StringBuilder();
        
        for (char c : text.toCharArray()) {
            if (Character.isAlphabetic(c)) {
                char base = Character.isLowerCase(c) ? 'a' : 'A';
                encrypted.append((char) ((c - base + shift) % 26 + base));
            } else if (Character.isDigit(c)) {
                encrypted.append("A" + c + "B");  // e.g., '0' becomes "A0B", '1' becomes "A1B", etc.
            } else {
                encrypted.append(c);
            }
        }

        return encrypted.toString();
    }

    // Decrypt using custom cipher
    public static String decrypt(String text, int shift) {
        StringBuilder decrypted = new StringBuilder();
        
        for (int i = 0; i < text.length(); i++) {
            char c = text.charAt(i);
            
            if (Character.isAlphabetic(c)) {
                char base = Character.isLowerCase(c) ? 'a' : 'A';
                decrypted.append((char) ((c - base - shift + 26) % 26 + base));
            } else if (i < text.length() - 2 && text.substring(i, i + 3).startsWith("A") && text.substring(i, i + 3).endsWith("B")) {
                decrypted.append(text.charAt(i + 1));
                i += 2;  // skip the next two characters 'A' and 'B'
            } else {
                decrypted.append(c);
            }
        }

        return decrypted.toString();
    }
}
