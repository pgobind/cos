# Assuming the SparkSession is already initialized as 'spark'
# and that you've loaded your data into DataFrames and registered them as temp views:

# DataFrame equivalent to 'rec_pl_3way_ledger_pnl_detail' is registered as 'df1'
# DataFrame equivalent to 'rec_pl_3way_mtd_posting_sum' is registered as 'df2'

# Prepare the SQL statement to perform the update logic
update_statement = """
SELECT
  df1.*,
  COALESCE(df2.id_gl_acct, df1.id_gl_acc) AS id_gl_acc,
  COALESCE(df2.id_sca, df1.id_sca) AS id_sca,
  COALESCE(df2.am_posting, df1.am_ledger_mtd_pl) AS am_ledger_mtd_pl
FROM df1
LEFT JOIN df2
  ON df1.dt_load = df2.dt_load
  AND df1.id_le = df2.id_le
  AND df1.id_ou = df2.id_ou
  AND df1.id_ccy_iso = df2.id_ccy_iso
  AND df1.id_gmi_cust = df2.id_gmi_cust
  AND df1.id_instrmnt_type = df2.instrmnt_type
WHERE df1.dt_load = 'recdate'
"""

# Execute the SQL statement
updated_df = spark.sql(update_statement)

# Register the result as a new temp view
updated_df.createOrReplaceTempView("updated_df1")
