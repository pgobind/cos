import org.apache.spark.sql.SparkSession;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;

SparkSession spark = SparkSession.builder().appName("Spark SQL Example").getOrCreate();

// Register your DataFrames as temporary views so you can use them in SQL
fc_daily_ugl_rec.createOrReplaceTempView("fc_daily_ugl_rec");
SCA_GL_XREF.createOrReplaceTempView("SCA_GL_XREF");

// Now perform a SQL operation that mimics the update
String sql =
    "SELECT f.*, " +
    "       CASE WHEN s.id_gl_acc IS NOT NULL THEN (f.am_u2_mktp_pl + f.am_u2_orig_prem + f.am_tplu1s1_mtd_pl - f.am_merit_mtd_pl) " +
    "            ELSE f.am_diff END as am_diff, " +
    "       CASE WHEN s.id_gl_acc IS NOT NULL THEN current_date() " +
    "            ELSE f.dt_load END as dt_load " +
    "FROM fc_daily_ugl_rec f " +
    "LEFT JOIN SCA_GL_XREF s " +
    "ON trim(f.id_gl_acc) = trim(s.id_gl_acc) " +
    "AND f.id_le = s.id_le " +
    "AND s.in_pnl_ugl = 'U'";

Dataset<Row> updatedDataset = spark.sql(sql);

// Overwrite the original dataset with the updated dataset
updatedDataset.write().mode("overwrite").saveAsTable("fc_daily_ugl_rec");

// Stop the Spark session
spark.stop();
