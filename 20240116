import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SparkSession;

public class SparkUpdateFromJoin {
    public static void main(String[] args) {
        SparkSession spark = SparkSession.builder()
            .appName("Update From Join")
            .getOrCreate();

        // Load the DataFrames corresponding to your tables
        Dataset<Row> meritRec = spark.read()./* your loading mechanism for merit_rec */;
        Dataset<Row> meritBalances = spark.read()./* your loading mechanism for merit_balances */;
        Dataset<Row> orgOuXref = spark.read()./* your loading mechanism for ORG_OU_XREF */;
        Dataset<Row> scaGlXref = spark.read()./* your loading mechanism for SCA_GL_XREF */;

        // Register DataFrames as temp views
        meritRec.createOrReplaceTempView("merit_rec");
        meritBalances.createOrReplaceTempView("merit_balances");
        orgOuXref.createOrReplaceTempView("ORG_OU_XREF");
        scaGlXref.createOrReplaceTempView("SCA_GL_XREF");

        // Perform SQL transformation equivalent to your update
        Dataset<Row> updated = spark.sql(
            "SELECT m.*, " +
            "       COALESCE(mb.am_balance, m.am_current_balance) as updated_am_current_balance " +
            "FROM merit_rec m " +
            "LEFT JOIN merit_balances mb ON cast(m.id as int) = cast(mb.id as int) " +
            "LEFT JOIN ORG_OU_XREF o ON cast(m.id_org as int) = cast(o.id_org as int) " +
            "LEFT JOIN SCA_GL_XREF s ON cast(m.id_sca as int) = cast(s.id_sca as int) " +
            "WHERE cast(s.in_pnl_ugl as string) = 'P' " +
            "AND   cast(m.dt_cob as date) = cast(s.dt_cob as date)"
        );

        // Show the result
        updated.show();

        // Stop SparkSession
        spark.stop();
    }
}


spark.sql(
    "SELECT " +
    "m.*, " +
    "COALESCE(mb.am_balance, m.am_current_balance) as am_current_balance " +
    "FROM " +
    "merit_rec m " +
    "LEFT JOIN merit_balances mb ON cast(m.id as int) = cast(mb.id as int) " +
    "LEFT JOIN ORG_OU_XREF o ON cast(m.id_org as int) = cast(o.id_org as int) " +
    "LEFT JOIN SCA_GL_XREF s ON cast(m.id_sca as int) = cast(s.id_sca as int) " +
    "WHERE " +
    "cast(s.in_pnl_ugl as string) = 'P' " +
    "AND cast(m.dt_cob as date) = cast(s.dt_cob as date)"
)


spark.sql(
    "SELECT " +
    "m.*, " +
    "COALESCE(sub.am_balance, m.am_current_balance) as am_current_balance " +
    "FROM merit_rec m " +
    "LEFT JOIN (" +
    "   SELECT mb.*, o.id_org, s.id_sca " +
    "   FROM merit_balances mb " +
    "   INNER JOIN ORG_OU_XREF o ON mb.id_ou = o.id_ou " +
    "   INNER JOIN SCA_GL_XREF s ON mb.id_sca = s.id_sca AND mb.id_cy = s.id_cy " +
    ") sub ON m.id = sub.id AND m.id_org = sub.id_org AND m.id_sca = sub.id_sca " +
    "WHERE sub.in_pnl_ugl = 'P' AND m.dt_cob = sub.dt_cob"
)

